
2022.10.20

강사님 - 유앤미소프트
# 외부 기기(하드웨어)를 유니티로 연동하는 법 


[개발했던 것들]
Exciting Rainbow Movie DRum 

[개발시 나타나는 여러 문제들]
동영상 100mg -> 유니티에서 풀다보면 100g 가 되는 문제

---------------------------------------------------------------------------------------------
- 특정 아이디어 제품 + 금형비(3000만 이상 수익을 내야) / 나무외형(레이저가공) = 

- 교구

- c# 이해는 하는 정도



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2022.10.21 

아두이노 
- 이탈리아에서 만들어진 오픈소스 소프트웨어 대표적 제품, 이탈리아 왕 이름에서 유래
- 오픈소스 하드웨어 프로젝트의 결과물
- 하드웨어 설계도가 오픈되어 있어 누구든지 만들 수 있음


아두이노 보드 종류 - Uno,  Nano,  Pro Mini,  Mega


디지털핀
- RX<-0,  TX->1는 이미 USB(pc통신용)가 연결됨 
- 빨강 5V (+), 검정 GND (-)



아두이노 작품 종류 : 
https://www.google.com/search?q=%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8+%EC%9E%91%ED%92%88&source=lnms&tbm=isch&sa=X&ved=2ahUKEwin5Kakj_D6AhVEDd4KHd7HC3wQ_AUoAXoECAEQAw&biw=1236&bih=727&dpr=1#imgrc=bqAvn6ouGGzyfM


1 아두이노 홈페이지 : https://arduino.cc/
2 Software - Legacy IDE (1.8.X) - Windows zip file - JUST DOWNLOAD  ( https://www.arduino.cc/en/donate/ )
3 arduino.exe 실행
4. 
툴 - 보드 - arduino Uno
툴 - 포트 : 

-----------------------------------------------------------
void setup() {
  // put your setup code here, to run once:  최초 한번만 실행
}

void loop() {
  // put your main code here, to run repeatedly: 대기 상태, 깨어있는 상태를 유지
}
-----------------------------------------------------------
void setup() {
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);

}

void loop() {
  digitalWrite(4, HIGH);    //켜는거
  delay(1000);
  digitalWrite(4, LOW);    //끄는 거
  digitalWrite(5, HIGH);   
  delay(1000);
  digitalWrite(5, LOW);   
}

-----------------------------------------------------------
int red = 4;
int yellow = 5;
int green = 6;

void setup() {
  pinMode(red, OUTPUT);
  pinMode(yellow, OUTPUT);
  pinMode(green, OUTPUT);
}

void loop() {
  digitalWrite(red, HIGH);   
  delay(500);
  digitalWrite(red, LOW); 
  delay(500);  
  digitalWrite(yellow, HIGH);
  delay(500);
  digitalWrite(yellow, LOW);
  delay(500);
  digitalWrite(green, HIGH);
  delay(500);
  digitalWrite(green, LOW);
  delay(500);
}
-----------------------------------------------------------
int red = 4;
int yellow = 5;
int green = 6;

void setup() {
  pinMode(red, OUTPUT);
  pinMode(yellow, OUTPUT);
  pinMode(green, OUTPUT);
  Serial.begin(9600);                      /// 시리얼모니터(돋보기모양)와 9600속도로 통신을 하겠다. 
}

void loop() {
  
  Serial.println("신호등 확인");            /// printin이 아니라 println이다.

  for(int i=0; i<5; i++)
  {
    digitalWrite(red, HIGH);   
    digitalWrite(yellow, HIGH);   
    digitalWrite(green, HIGH);
    delay(500);
    
    digitalWrite(red, LOW);   
    digitalWrite(yellow, LOW);   
    digitalWrite(green, LOW);
    delay(500);
  }  
  
  Serial.println("신호등 오프");
-----------------------------------------------------------
int red = 4;
int yellow = 5;
int green = 6;

void setup() {
  pinMode(red, OUTPUT);
  pinMode(yellow, OUTPUT);
  pinMode(green, OUTPUT);
  Serial.begin(9600);                  /// 시리얼모니터(돋보기모양)와 9600속도로 통신을 하겠다. 
}

void loop() {

if (Serial.available()>0)               /// 신호가 있을 때만
 {
  char input = Serial.read();        /// 신호 읽은 것을 변수 input에 저장
  Serial.print(input);                 ///  input에 저장된 신호 출력
 }
 
}

-----------------------------------------------------------
int red = 4;
int yellow = 5;
int green = 6;

void setup() {
  pinMode(red, OUTPUT);
  pinMode(yellow, OUTPUT);
  pinMode(green, OUTPUT);
  Serial.begin(9600);                   /// 시리얼모니터(돋보기모양)와 9600속도로 통신을 하겠다. 
}

void loop() {

if (Serial.available()>0)                /// 신호가 있을 때만 
 {
  char input = Serial.read();         /// 신호 읽은 것을 변수 input에 저장
  Serial.print(input);                   ///  input에 저장된 신호 출력
  
  switch(input)
  {
    case 'R': 
    digitalWrite(red, HIGH);        
    delay(500);
    digitalWrite(red, LOW);
    delay(500);
    break;
    case 'Y': 
    digitalWrite(yellow, HIGH);  
    delay(500);
    digitalWrite(yellow, LOW);
    delay(500);
    break;
    case 'G': 
    digitalWrite(green, HIGH);  
    delay(500);
    digitalWrite(green, LOW);
    delay(500);
    break;    
  }

 }


}
-----------------------------------------------------------

아두이노 보드 - 컴퓨터 - Unity 연결 (LED 선택 점등)

https://you-rang.tistory.com/213 (구글에서 'Unity 시리얼 통신' 검색)

1. 환경설정
Edit - ProjectSetting - Player - OtherSetting - Rendering - Color Space : Gamma
                                                                        - Auto Graphics API for Windows 활성화
                                                                        - Auto Graphics API for Mac 활성화
                                                                        - Auto Graphics API for Linux 활성화
                                                                        - Static Batching 활성화
                                                                        - GPU Skinning 활성화
                                                                        - Lightmap Streaming 활성화
                                                         - Configuration - Scripting Backend - Mono
                  					     - API Compatibility Level - .NET Framework
                                                                             
       
2. 하이러키
1)
Canvas - Panel 
         - Button R   
         - Button Y
         - Button B

2)
Arduino Mgr (ArduinoMgr script가 연결된 빈 Obj) - Port Number : COM4


3)
Canvas - Panel 
         - Button R  - On Click() - ArduinoMgr script가 연결된 빈 Obj 삽입 - Runtime Only, ArduinoMgr - LED_Toggle (string) 연결 - R
         - Button Y  - On Click() - ArduinoMgr script가 연결된 빈 Obj 삽입 - Runtime Only, ArduinoMgr - LED_Toggle (string) 연결 - B
         - Button B  - On Click() - ArduinoMgr script가 연결된 빈 Obj 삽입 - Runtime Only, ArduinoMgr - LED_Toggle (string) 연결 - Y

-----------------------------------------------------------
using System.IO.Ports;	//선언  (Edit - ProjectSetting - Player - OtherSetting - Configuration - API Compatibility Level - .NET Framework 를 해야 적용)


public class ArduinoMgr : MonoBehaviour
{
    public enum PortNumber 
    { 
        COM1, COM2, COM3, COM4, 
        COM5, COM6, COM7, COM8, 
        COM9, COM10, COM11, COM12, 
        COM13, COM14, COM15, COM16
    }

    private SerialPort serial;  //연결된 포트, baud rate(통신속도)

    [SerializeField]
    private PortNumber portNumber = PortNumber.COM4;    //포트 넘버

    [SerializeField]
    private string baudRate = "9600";                   //통신속도

    private bool LED_R_State = false;                   //토글 여부
    private bool LED_B_State = false;
    private bool LED_Y_State = false;

    void Start()
    {
        serial = new SerialPort(portNumber.ToString(), int.Parse(baudRate));     //baudRate(9600은 int형), portNumber(PortNumber.COM4는 string형) /  new SerialPort 포트 열기
    }

    void Update()
    {
        
    }

    public void LED_Toggle(string _string) 
    {
        bool LED_State = false;

        switch (_string)        ///LED 상태값 불러오기
        {
            case "R":
                LED_State = LED_R_State;
                break;
            case "B":
                LED_State = LED_B_State;
                break;
            case "Y":
                LED_State = LED_Y_State;
                break;
        }

        if (!serial.IsOpen)           ///포트가 연결이 안되어있으면
            serial.Open();            /// 포트 열어라

        if (LED_State == false)       ///LED 점등
        {
            serial.Write(_string);
            LED_State = !LED_State;
        }
        else if (LED_State) 
        {
            serial.Write(_string.ToLower());        ///소문자변환
            LED_State = !LED_State;

        }

        switch (_string)                ///LED 상태값 저장
        {
            case "R":
                LED_R_State = LED_State;
                break;
            case "B":
                LED_B_State = LED_State;
                break;
            case "Y":
                LED_Y_State = LED_State;
                break;
        }

    }
}


-----------------------------------------------------------
3. 아두이노로 데이터 받기

1) arduino script 입력  (포트 연결이 안 될경우 arduino에서 com4를 먼저 연결하기 위해 유니티 포트를 잠시 다른 번호로 바꾸고, 아두이노 com4가 먼저 연결되서 아래 스크립트가 정상 작동하는지 확인하고,  유니티 com4로 다시 변경한다. )
-----------------------------------------------------------
#define LED_R 4
#define LED_B 6
#define LED_Y 5

char input;

void setup() {
  Serial.begin(9600);         ///9600속도로 통신창과 통신을 하겠다.
  pinMode(LED_R, OUTPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_Y, OUTPUT);  
}

void loop() {
if(Serial.available())        ///신호 버퍼가 차있는지 확인
{
  input = Serial.read();      ///읽어온 신호 데이터를 저장

  switch(input)
  {
    case 'R':
      digitalWrite(LED_R, HIGH);
      break;
    case 'r':
      digitalWrite(LED_R, LOW);
      break;
    case 'B':
      digitalWrite(LED_B, HIGH);
      break;
    case 'b':
      digitalWrite(LED_B, LOW);
      break;
    case 'Y':
      digitalWrite(LED_Y, HIGH);
      break;
    case 'y':
      digitalWrite(LED_Y, LOW);
      break;
   }
}

}




---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[피에조 스피커(Piezo speaker, 전기적 신호를 소리로 변환해주는 동그란 장치, 압전소자의 기계적 떨림을 소리로 변환)로 전자키보드 만들기]


1. 준비과정 
- 툴 - 포트 : COM5 로 다시 설정

2. 아래 script 적용
------------------------------------------------------------
int piezo_pin=3;
int melody_freq[8] = {262,294,330,349,392,440,494,523}; //도레미파솔라시도

void setup() {
  pinMode(3, OUTPUT);
}

void loop() {

    tone(piezo_pin, 262, 200);   //포트, 음역대 주파수, 200밀리초(0.2초)만큼 소리를 냄
    tone(piezo_pin, 294, 200);  
    tone(piezo_pin, 330, 200);  
    tone(piezo_pin, 349, 200);  
    tone(piezo_pin, 392, 200);  
    tone(piezo_pin, 440, 200); 
    tone(piezo_pin, 494, 200);    
    tone(piezo_pin, 523, 200);        
    tone(piezo_pin, 523, 200); 
  }

}




}
-----------------------------------------------------------

int piezo_pin=3;
int melody_freq[8] = {262,294,330,349,392,440,494,523}; //도레미파솔라시도

void setup() {
  pinMode(3, OUTPUT);
  Serial.begin(9600);     ///통신속도 설정
}

void loop() {
if(Serial.available()>0)
{
  
  switch (Serial.read())
  {
    case 'a':
    tone(piezo_pin, 262, 200);  //포트, 음역대 주파수, 200mmsec 시간만큼 소리를 냄
    break;

    case 's':
    tone(piezo_pin, 294, 200);  
    break;

    case 'd':
    tone(piezo_pin, 330, 200);  
    break;

    case 'f':
    tone(piezo_pin, 349, 200);  
    break;

    case 'g':
    tone(piezo_pin, 392, 200);  
    break;

    case 'h':
    tone(piezo_pin, 440, 200);  
    break;

    case 'j':
    tone(piezo_pin, 494, 200);  
    break;
    
    case 'k':
    tone(piezo_pin, 523, 200); 
    break;
        
    case 'l':
    tone(piezo_pin, 523, 200); 
    break;

  }

}


}
-----------------------------------------------------------



